@using TimeSheets.Core.Model
@model TimeSheets.Web.ViewModels.ShiftVM.ShiftIndexViewModel

@{
    ViewBag.Title = "Index";
}
<div class="container">
    <h2>Shifts</h2>

    @foreach (var shift in Model.ShiftList)
    {
        <div class="panel panel-primary">
            <div class="panel-heading">
                <div class="panel-title">
                    <h5 class="col-md-6 col-xs-6">@shift.StartDateTime.ToString("HH:mm") - @shift.FinishDateTime.ToString("HH:mm")</h5>
                    <a href="@Url.Action("AddRemoveStaff", "Shift", new { id = shift.Id })" class ="btn btn-info btn-sm"><span class="glyphicon glyphicon-plus-sign"></span>Add Staff</a>
                </div>
            </div>
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-condensed table-hover">
                        <tr>
                            <th>Name</th>
                            <th>Time In</th>
                            <th>Time Out</th>
                            <th>Lunch Break</th>
                            <th></th>
                        </tr>
                        @if (shift.StaffShifts.Count() != 0)
                        {
                            foreach (var staffShift in shift.StaffShifts)
                            {
                            <tr>
                                <td class="col-md-4">@staffShift.Staff.Name</td>
                                <td class="col-md-2">
                                    @if (staffShift.PaidStartTime.HasValue)
                                    {
                                        if (staffShift.PaidStartTime.Value < shift.StartDateTime.AddMinutes(30) && staffShift.PaidStartTime.Value > shift.StartDateTime)
                                        {
                                        @staffShift.PaidStartTime.Value.ToString("HH:mm")<span class="glyphicon glyphicon-ok-sign text-success"></span><span class="label label-warning">Late</span>
                                        }
                                        else if (staffShift.PaidStartTime.Value >= shift.StartDateTime.AddMinutes(30))
                                        {
                                        @staffShift.PaidStartTime.Value.ToString("HH:mm")<span class="glyphicon glyphicon-ok-sign text-success"></span><span class="label label-danger">Late</span>
                                        }
                                        else
                                        {
                                        @staffShift.PaidStartTime.Value.ToString("HH:mm")<span class="glyphicon glyphicon-ok-sign text-success"></span>   
                                        }
                                    }
                                    else
                                    {
                                        @*<span class="text-muted">@shift.StartDateTime.ToString("HH:mm")</span><span class="glyphicon glyphicon-remove-sign text-danger"></span>*@
                                    }
                                </td>
                                <td class="col-md-2">
                                    @if (staffShift.PaidFinishTime.HasValue)
                                    {
                                        if (staffShift.PaidFinishTime.Value < shift.FinishDateTime.AddMinutes(-30))
                                        {
                                        @staffShift.PaidFinishTime.Value.ToString("HH:mm")<span class="glyphicon glyphicon-ok-sign text-success"></span><span class="label label-danger">Early</span>
                                        }
                                        else if (shift.FinishDateTime >= staffShift.PaidFinishTime.Value.AddMinutes(-30) && staffShift.PaidFinishTime.Value < shift.FinishDateTime.AddMinutes(-10))
                                        {
                                        @staffShift.PaidFinishTime.Value.ToString("HH:mm")<span class="glyphicon glyphicon-ok-sign text-success"></span><span class="label label-warning">Early</span>
                                        }
                                        else
                                        {
                                        @staffShift.PaidFinishTime.Value.ToString("HH:mm")<span class="glyphicon glyphicon-ok-sign text-success"></span>
                                        }
                                    }
                                    else
                                    {
                                        @*<span class="text-muted">@shift.FinishDateTime.ToString("HH:mm")</span><span class="glyphicon glyphicon-remove-sign text-danger"></span>*@
                                    }
                                </td>
                                <td class="col-md-3"></td>
                                <td class="col-md-1"><a href="@Url.Action("Edit","StaffShift",new {Id = staffShift.StaffId})" class="btn btn-success btn-xs"><span class="glyphicon glyphicon-pencil"></span></a></td>
                            </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td class="col-md-4"><span class="text-muted">No staff in shift</span></td>
                                <td class="col-md-2"></td>
                                <td class="col-md-2"></td>
                                <td class="col-md-3"></td>
                                <td class="col-md-1"><span class="glyphicon glypicon"></span></td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    }


    <p>
        @Html.ActionLink("New Shift", "Create", "Shift", null, new { @class = "btn btn-info" })
    </p>
</div>
